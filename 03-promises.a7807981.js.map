{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEeC,SAASC,cAAc,SAE/BC,iBAAiB,UAGxB,SAAkBC,GAChBA,EAAEC,iBAQF,IAPA,IAEmBC,EAAfF,EAAEG,cADJC,SAAYC,EAAKH,EAALI,MAAOC,EAAIL,EAAJK,KAAMC,EAAMN,EAANM,OAEvBC,EAAUC,OAAOL,EAAMM,OACvBC,EAASF,OAAOH,EAAKI,OACrBE,EAAWH,OAAOF,EAAOG,OAEpBG,EAAI,EAAGA,EAAID,EAAUC,GAAK,EAAG,CACpBC,EAAcD,EAAGL,GAE9BO,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUZ,EAAKW,EAALX,MACjBa,EAAAxB,GAASyB,OAAOC,QACd,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANhB,EAAM,OAEhDiB,QAAQC,IAAI,uBAAwCF,OAAfJ,EAAS,QAAYI,OAANhB,EAAM,M,IAE3DmB,OAAM,SAAAR,G,IAAGC,EAAQD,EAARC,SAAUZ,EAAKW,EAALX,MAClBa,EAAAxB,GAASyB,OAAOC,QACd,sBAAuCC,OAAfJ,EAAS,QAAYI,OAANhB,EAAM,OAE/CiB,QAAQC,IAAI,sBAAqCF,OAAfJ,EAAS,QAAYI,OAANhB,EAAM,M,IAE3DG,GAAWG,C,KAIf,SAASG,EAAcG,EAAUZ,GAC/B,OAAO,IAAIoB,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAET,WAAUZ,UAEpBsB,EAAO,CAAEV,WAAUZ,S,GAEpBA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onSubmit);\nlet currentDelay = 0;\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n  let delayEl = Number(delay.value);\n  let stepEl = Number(step.value);\n  let amountEl = Number(amount.value);\n\n  for (let i = 0; i < amountEl; i += 1) {\n    const promise = createPromise(i, delayEl);\n    promise\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delayEl += stepEl;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","document","querySelector","addEventListener","e","preventDefault","_elements","currentTarget","elements","delay1","delay","step","amount","delayEl","Number","value","stepEl","amountEl","i","$ce04d3a99e08e73b$var$createPromise","then","param","position","$parcel$interopDefault","Notify","success","concat","console","log","catch","Promise","resolve","reject","shouldResolve","Math","random","setTimeout"],"version":3,"file":"03-promises.a7807981.js.map"}